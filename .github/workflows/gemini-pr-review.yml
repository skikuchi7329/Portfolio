name: 'üßê Gemini Pull Request Review'

on:
  pull_request:
    types:
      - 'opened'
      - 'reopened'
  issue_comment:
    types:
      - 'created'

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

defaults:
  run:
    shell: 'bash'

permissions:
  contents: 'read'
  id-token: 'write'
  issues: 'write'
  pull-requests: 'write'
  statuses: 'write'

jobs:
  review-pr:
    if: |-
      (
        github.event_name == 'pull_request' &&
        contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.pull_request.author_association)
      ) ||
      (
        github.event_name == 'issue_comment' &&
        github.event.issue.pull_request &&
        contains(github.event.comment.body, '@gemini-cli /review') &&
        contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.comment.author_association)
      )
    timeout-minutes: 5
    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Checkout PR code'
        uses: 'actions/checkout@v4'

      - name: 'Get PR details'
        id: 'get_pr'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          PR_NUMBER: '${{ github.event.issue.number || github.event.pull_request.number }}'
        run: |-
          set -euo pipefail
          echo "pr_number=${PR_NUMBER}" >> "${GITHUB_OUTPUT}"
          PR_DATA="$(gh pr view "${PR_NUMBER}" --json title,body,additions,deletions,changedFiles,baseRefName,headRefName)"
          echo "pr_data=${PR_DATA}" >> "${GITHUB_OUTPUT}"
          PR_PATCH="$(gh pr diff "${PR_NUMBER}" --patch)"
          {
            echo "pr_patch<<EOF"
            echo "${PR_PATCH}"
            echo "EOF"
          } >> "${GITHUB_OUTPUT}"

      - name: 'Run Gemini PR Review'
        uses: 'google-github-actions/run-gemini-cli@v0'
        id: 'gemini_pr_review'
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}

          prompt: |-
            ## Role
            You are an expert code reviewer. Your goal is to identify potential bugs and areas for improvement in the provided pull request.

            ## Context
            - Repository: `${{ github.repository }}`
            - PR Number: `${{ steps.get_pr.outputs.pr_number }}`
            - PR Details (JSON): `${{ steps.get_pr.outputs.pr_data }}`
            - PR Diff:
            ```diff
            ${{ steps.get_pr.outputs.pr_patch }}
            ```

            ## Instructions
            1.  **Analyze the Context**: Review the PR details and the code changes in the diff.
            2.  **Identify Issues**: Look for bugs, performance issues, security vulnerabilities, and deviations from best practices.
            3.  **Provide Feedback**: Create a concise, constructive review. For each point, reference the file and line number. If suggesting code changes, use markdown suggestion blocks.
            4.  **Summarize**: Start your review with a brief, high-level summary of the pull request.
            5.  **Be Specific**: Do not give vague feedback. Your comments must be actionable.

      - name: 'Gemini„ÅÆÂá∫Âäõ„Çí„Éá„Éê„ÉÉ„Ç∞„Åô„Çã'
        shell: bash
        run: |
          echo "--- Gemini„É¨„Çπ„Éù„É≥„Çπ„Åì„Åì„Åã„Çâ ---"
          echo "${{ steps.gemini_pr_review.outputs.gemini-response }}"
          echo "--- Gemini„É¨„Çπ„Éù„É≥„Çπ„Åì„Åì„Åæ„Åß ---"

      - name: 'Post Review Comment'
        if: success()
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          PR_NUMBER: '${{ steps.get_pr.outputs.pr_number }}'
          REVIEW: '${{ steps.gemini_pr_review.outputs.gemini-response }}'
        run: |
          gh pr comment "${PR_NUMBER}" --body "$REVIEW"

      - name: 'Post Failure Comment'
        if: failure()
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          PR_NUMBER: '${{ steps.get_pr.outputs.pr_number }}'
          RUN_URL: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        run: |
          gh pr comment "${PR_NUMBER}" --body "ü§ñ Gemini PR Review failed. Please check the [action logs]($RUN_URL) for details."
